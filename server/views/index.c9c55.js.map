{"version":3,"file":"index.c9c55.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACsD;;;;;;;;;;;;;;;ACtFtD;AACA;AACA,WAAW,SAAS;AACpB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACkC;;;;;;;UCvBlC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNoD;AACkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAAyB,eAAe,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,qBAAqB,iEAAsB;AAC3C,uBAAuB,kEAAyB,eAAe,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kEAAyB,eAAe,cAAc;AACpE;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ,wDAAe;AACvB,OAAO;AACP;AACA;AACA,OAAO;AACP,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,QAAQ,wDAAe;AACvB,OAAO;AACP;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,QAAQ,wDAAe;AACvB;AACA,OAAO;AACP;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAAyB,eAAe,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,qBAAqB,iEAAsB;AAC3C,uBAAuB,kEAAyB,eAAe,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kEAAyB,eAAe,cAAc;AACpE;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,QAAQ,wDAAe;AACvB,OAAO;AACP;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,QAAQ,wDAAe;AACvB;AACA,OAAO;AACP;AACA,CAAC","sources":["webpack:///./index/js/dom.js","webpack:///./index/js/parse.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./index/js/index.js"],"sourcesContent":["/**\r\n * 弹出消息框\r\n * @param {string} content - 消息框内容\r\n */\r\nfunction popupMessageBox(content) {\r\n  const fragment = document.createDocumentFragment();\r\n  const divEl = document.createElement(\"div\");\r\n  divEl.style.position = \"fixed\";\r\n  divEl.style.textAlign = \"center\";\r\n  divEl.style.padding = \"5px\";\r\n  divEl.style.border = \"1px solid #206864\";\r\n  divEl.style.backgroundColor = \"#f5f3f2\";\r\n  divEl.style.left = \"50%\";\r\n  divEl.style.top = \"15px\";\r\n  divEl.style.transform = \"translate(-50%, 0)\";\r\n  divEl.style.color = \"\";\r\n  divEl.textContent = content;\r\n  fragment.appendChild(divEl);\r\n\r\n  const keyframes = new KeyframeEffect(\r\n    divEl,\r\n    [\r\n      {\r\n        transform: \"translate(-50%, 0)\",\r\n        opacity: 1,\r\n      },\r\n      {\r\n        transform: \"translate(-50%, -50%)\",\r\n        top: \"7px\",\r\n        opacity: 0.8,\r\n      },\r\n      {\r\n        transform: \"translate(-50%, -100%)\",\r\n        top: \"0px\",\r\n        opacity: 0,\r\n      },\r\n    ],\r\n    {\r\n      duration: 1000,\r\n    }\r\n  );\r\n  const animation = new Animation(keyframes, document.timeline);\r\n  document.documentElement.appendChild(fragment);\r\n  animation.play();\r\n  animation.addEventListener(\"finish\", () => {\r\n    // 动画完成，移除该dom元素\r\n    divEl.remove();\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {HTMLDivElement} el - 挂载的dom元素\r\n * @param {object} opts 配置对象\r\n * @param {boolean} opts.cache - 是否存在浏览器磁盘缓存\r\n */\r\nfunction fixFeedBackElementContent(el, opts = { cache: true }) {\r\n  // 清空el中所有的内容\r\n  el.innerHTML = \"\";\r\n  const fragment = document.createDocumentFragment();\r\n  const span = document.createElement(\"span\");\r\n  let color = \"\";\r\n  try {\r\n    if (opts.cache) {\r\n      const span1 = span.cloneNode(false),\r\n        operationSpan = span.cloneNode(false),\r\n        span2 = span.cloneNode(false);\r\n\r\n      span1.textContent = \"浏览器磁盘缓存内容倒计时:\";\r\n      span2.textContent = \"s\";\r\n      fragment.append(span1, operationSpan, span2);\r\n      color = \"red\";\r\n      return operationSpan;\r\n    } else {\r\n      const tipSpan = span.cloneNode(false);\r\n      tipSpan.textContent = \"该请求当前没有浏览器的磁盘缓存\";\r\n      fragment.appendChild(tipSpan);\r\n      color = \"green\";\r\n    }\r\n  } finally {\r\n    el.appendChild(fragment);\r\n    el.style.outlineWidth = \"1px\";\r\n    el.style.color = color;\r\n  }\r\n}\r\n\r\nexport { popupMessageBox, fixFeedBackElementContent };\r\n","/**\r\n * 转化响应标头中的CacheControl为对象\r\n * @param {Headers} headers - Headers对象\r\n * @returns object\r\n * @example { 'max-age': 100, public: true }\r\n */\r\nfunction getCacheControlContent(headers) {\r\n  const data = {};\r\n  const headersArr = headers\r\n    .get(\"Cache-Control\")\r\n    .split(\",\")\r\n    .map((item) => item.split(\"=\"));\r\n  headersArr.forEach((item) => {\r\n    const [key, val] = item;\r\n    if (val !== undefined) {\r\n      data[key] = val;\r\n    } else {\r\n      data[key] = true;\r\n    }\r\n  });\r\n  return data;\r\n}\r\n\r\nexport { getCacheControlContent };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getCacheControlContent } from \"./parse.js\";\r\nimport { popupMessageBox, fixFeedBackElementContent } from \"./dom.js\";\r\n\r\n// 强制缓存测试\r\n(function (doc) {\r\n  const test1ContentEl = doc.querySelector(\"#test-1 > .content\");\r\n  const reqBtn = test1ContentEl.querySelector(\".request > button#fruit\");\r\n  const feedBackEl = test1ContentEl.querySelector(\".feed-back\");\r\n  let timeSpan = \"\";\r\n\r\n  fixFeedBackElementContent(feedBackEl, { cache: false });\r\n\r\n  // 强制缓存时间, 是否能对maxAge赋值, 页面记录强制缓存时间的计时器\r\n  let maxAge = undefined,\r\n    flag = false,\r\n    timer = null;\r\n\r\n  reqBtn.addEventListener(\"click\", function () {\r\n    fetch(\"/api/caches/emoji\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          if (!flag) {\r\n            maxAge = getCacheControlContent(response.headers)[\"max-age\"];\r\n            timeSpan = fixFeedBackElementContent(feedBackEl, { cache: true });\r\n            timeSpan.textContent = maxAge;\r\n            flag = true;\r\n          }\r\n          return response.text();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (timeSpan && timeSpan.textContent !== 0 && !timer) {\r\n          timer = setInterval(() => {\r\n            timeSpan.textContent = (timeSpan.textContent - 0.1).toFixed(1);\r\n            if (timeSpan.textContent <= 0) {\r\n              clearInterval(timer);\r\n              timer = null;\r\n              fixFeedBackElementContent(feedBackEl, { cache: false });\r\n              maxAge = undefined;\r\n              timeSpan = \"\";\r\n              flag = false;\r\n            }\r\n          }, 100);\r\n        }\r\n        popupMessageBox(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"请求失败 =>\", error);\r\n      });\r\n  });\r\n})(document);\r\n\r\n// 协商缓存测试\r\n(function (doc) {\r\n  const test2ContentEl = doc.querySelector(\"#test-2 > .content\");\r\n  // 发送请求\r\n  const reqBtn = test2ContentEl.querySelector(\".request > button#dictum\");\r\n  reqBtn.addEventListener(\"click\", function () {\r\n    fetch(\"/api/caches/dictum\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.text();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        popupMessageBox(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"请求失败 =>\", error);\r\n      });\r\n  });\r\n\r\n  // 修改该请求的服务器资源\r\n  const modifyEl = test2ContentEl.querySelector(\".modify\");\r\n  const selectEl = modifyEl.querySelector(\"select\");\r\n  const inputEl = modifyEl.querySelector(\"input\");\r\n  const submitBtnEl = modifyEl.querySelector(\"button.submit\");\r\n\r\n  let putType = \"cover\";\r\n  let inputText = \"\";\r\n  selectEl.addEventListener(\"input\", (e) => {\r\n    putType = e.target.value;\r\n  });\r\n  inputEl.addEventListener(\"input\", (e) => {\r\n    inputText = e.target.value;\r\n  });\r\n  submitBtnEl.addEventListener(\"click\", () =>\r\n    fetch(\"/api/caches/dictum\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"X-Put-Type\": putType,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        data: inputText,\r\n      }),\r\n    })\r\n      .then((reponse) => {\r\n        if (reponse.ok) {\r\n          return reponse.text();\r\n        }\r\n      })\r\n      .then(() => {\r\n        popupMessageBox(\"修改成功\");\r\n        inputEl.value = \"\";\r\n      })\r\n  );\r\n})(document);\r\n\r\n// 强制缓存+协商缓存测试\r\n(function (doc) {\r\n  const test3ContentEl = doc.querySelector(\"#test-3 > .content\");\r\n  // 强缓测试\r\n  const reqBtn = test3ContentEl.querySelector(\".request > button#sentence\");\r\n  const feedBackEl = test3ContentEl.querySelector(\".feed-back\");\r\n  let timeSpan = \"\";\r\n\r\n  fixFeedBackElementContent(feedBackEl, { cache: false });\r\n\r\n  // 强制缓存时间, 是否能对maxAge赋值, 页面记录强制缓存时间的计时器\r\n  let maxAge = undefined,\r\n    flag = false,\r\n    timer = null;\r\n\r\n  reqBtn.addEventListener(\"click\", function () {\r\n    fetch(\"/api/caches/sentence\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          if (!flag) {\r\n            maxAge = getCacheControlContent(response.headers)[\"max-age\"];\r\n            timeSpan = fixFeedBackElementContent(feedBackEl, { cache: true });\r\n            timeSpan.textContent = maxAge;\r\n            flag = true;\r\n          }\r\n          return response.text();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (timeSpan && timeSpan.textContent !== 0 && !timer) {\r\n          timer = setInterval(() => {\r\n            timeSpan.textContent = (timeSpan.textContent - 0.1).toFixed(1);\r\n            if (timeSpan.textContent <= 0) {\r\n              clearInterval(timer);\r\n              timer = null;\r\n              fixFeedBackElementContent(feedBackEl, { cache: false });\r\n              maxAge = undefined;\r\n              timeSpan = \"\";\r\n              flag = false;\r\n            }\r\n          }, 100);\r\n        }\r\n        popupMessageBox(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"请求失败 =>\", error);\r\n      });\r\n  });\r\n\r\n  // 协商缓存测试\r\n  // 修改该请求的服务器资源\r\n  const modifyEl = test3ContentEl.querySelector(\".modify\");\r\n  const selectEl = modifyEl.querySelector(\"select\");\r\n  const inputEl = modifyEl.querySelector(\"input\");\r\n  const submitBtnEl = modifyEl.querySelector(\"button.submit\");\r\n\r\n  let putType = \"cover\";\r\n  let inputText = \"\";\r\n  selectEl.addEventListener(\"input\", (e) => {\r\n    putType = e.target.value;\r\n  });\r\n  inputEl.addEventListener(\"input\", (e) => {\r\n    inputText = e.target.value;\r\n  });\r\n  submitBtnEl.addEventListener(\"click\", () =>\r\n    fetch(\"/api/caches/sentence\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"X-Put-Type\": putType,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        data: inputText,\r\n      }),\r\n    })\r\n      .then((reponse) => {\r\n        if (reponse.ok) {\r\n          return reponse.text();\r\n        }\r\n      })\r\n      .then(() => {\r\n        popupMessageBox(\"修改成功\");\r\n        inputEl.value = \"\";\r\n      })\r\n  );\r\n})(document);\r\n"],"names":[],"sourceRoot":""}